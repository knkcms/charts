apiVersion: v1
kind: Secret
metadata:
  name: admin-token
  namespace: {{ include "vaultwarden.fullname" . }}
  annotations:
    "helm.sh/resource-policy": "keep"
  # labels TODO
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secret := (lookup "v1" "Secret" .Release.Namespace "admin-token") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secret "admin-token") | default (randAlphaNum 32 | b64enc) }}
  # generate 32 chars long random string, base64 encode it and then double-quote the result string.
  admin-token: {{ $jwtSecret | b64enc | quote }}
