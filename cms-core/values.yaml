# Default values for cms-core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

env:
  name:
    DATABASE_DSN: "postgres://testuser:%3DrFolFHuue_b%3AIwt%2C%7D%3AnR00C@10.0.36.135:5432/cmspreview?sslmode=disable" # postgres://{user}:{password}@{hostname}:{port}/{database-name}?sslmode=disable

replicaCount: 1

docker:
  registry_server: knkcms.azurecr.io
  registry_username: knkcms
  registry_password: 0yrdfkiG/s5QEvEem/emIYBAmrBdhekh

area:
  image:
    pullPolicy: IfNotPresent
    repository: knkcms.azurecr.io/areaservice-dev
    tag: "0c7f58c"
  port: 8080

frontend:
  image:
    pullPolicy: IfNotPresent
    repository: knkcms.azurecr.io/cms-frontend
    tag: "b93e4d3"
  port: 80

postgres:
  name: pgo-jiw
  namespace: jiwprev
  databasename: knkcms_core
  username: admin
  # password: Password

imagePullSecrets:
  - name: docker-secrets
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: true
  annotations:
    # @TODO put these to ingress directly?
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  # hosts:
  host: cms-frontend.northeurope.az.preview.knkcms.io

  tls: 
  - secretName: cms-frontend-tls
    hosts:
    - cms-frontend.northeurope.az.preview.knkcms.io

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
